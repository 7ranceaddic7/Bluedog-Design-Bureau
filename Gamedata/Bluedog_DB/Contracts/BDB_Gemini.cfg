// Contract for BDB Gemini missions
//   Author: Morphisor

CONTRACT_TYPE
{
    name = BDB_Gemini_ATV
    group = BluedogDB
    genericTitle = Launch an unmanned target vehicle into orbit.
    genericDescription = Launch an unmanned target vehicle into orbit.
	
	title = Launch an unmanned target vehicle into orbit of @targetBody.
	description = Kerbal High Kommand has decided to begin exploring options for a permanent, manned presence in space. It is believed a manned presence in space will prove to be the ultimate surveillance and defense in space, needed to keep those Krussians under control. However for some strange, unfathomable reason, they want us to demonstrate the necessary systems and maneuvers first.&br;&br;The first phase of this new 'Kemini' program is to demonstrate that we can launch several spacecraft up into orbit and have them dock to each other. Therefore, your first task is to launch an unmanned target vehicle into a nice round orbit, including a docking port, and await further instructions.
	
    synopsis = <color=yellow>Launch an unmanned target vehicle (ATV) into space around @targetBody in preparation of a manned docking maneuver.</color>
	notes = In assembly, use the tags 'Gemini' and 'Agena' to find components fitting for this mission.
    completedMessage = ATV successfully deployed, awaiting rendezvous.

    // 1 at a time
    maxSimultaneous = 1

    // Always offered by Bluedog Design Bureau
    agent = Bluedog Design Bureau

    targetBody = @targetBody1

    // Contract rewards
	advanceFunds = Random(@BluedogDB:Kerbucks075,@BluedogDB:Kerbucks1)
    rewardFunds = Random(@BluedogDB:Kerbucks05,@BluedogDB:Kerbucks075)
    rewardReputation = Random(2.0, 5.0)

	// Randomly select a possible target body.
    DATA
    {
        type = CelestialBody
		hidden = true
		
        targetBody1 = @validBodies.Random()
    }
	
	// Any body from which we have returned.
	DATA
    {
        type = List<CelestialBody>
        hidden = true

        validBodies = ReturnedFromBodies().Where(cb => (cb.IsPlanet() || cb.IsMoon()))
    }

	PARAMETER
    {
        name = Kemini ATV
        type = VesselParameterGroup
        title = Launch a new Kemini ATV
		define = Kemini-ATV
		
		PARAMETER
		{
			name = NewVessel
			type = NewVessel
			title = The ATV must be a new vessel
		}
		
		PARAMETER
		{
			name = HasCrew
			type = HasCrew
			title = No crew on board
			minCrew = 0
			maxCrew = 0
		}
		
		PARAMETER
		{
			name = PartValidation
			type = PartValidation
			title = The ATV must have a materials bay
			
			part = bluedog_GATV_MaterialsBay
		}
		
		PARAMETER
		{
			name = PartValidation
			type = PartValidation
			title = Must have a docking port
			
			partModule = ModuleDockingNode
		}
		
		//Low, circular, scaling orbit
		PARAMETER
		{
			name = Orbit
			type = Orbit
			title = Achieve a near-circular orbit around @/targetBody
				
			minApA = Random(0.14,0.16) * @targetBody.Radius()
			maxApA = Random(0.24,0.26) * @targetBody.Radius()
			maxEccentricity = 0.01
			maxInclination = 40
			disableOnStateChange = true
			
			PARAMETER
			{
				name = Duration
				type = Duration
				duration = 45s

				preWaitText = Confirming orbit
				waitingText = Confirming orbit
				completionText = Orbit confirmed
			}
		}
    }
	
	// This requirement specifies the nodes that the parts with the required experiments currently reside in. Deliberately not specifying particular parts, so any part with the experiment can be used. If all applicable parts get placed to later nodes, could lead to issues however.
	REQUIREMENT
    {
        type = All

        REQUIREMENT
        {
            type = TechResearched

            tech = generalConstruction
        }

        REQUIREMENT
        {
            type = TechResearched

            tech = basicScience
        }
    }
	
	// Mission becomes available after manned return from orbit.
	REQUIREMENT
	{
		name = ReturnFromOrbit
		type = ReturnFromOrbit
		
		title = Must have returned from a manned orbit before
		
		checkType = Manned
		targetBody = HomeWorld()
	}
}


CONTRACT_TYPE
{
    name = BDB_Gemini
    group = BluedogDB
    genericTitle = Perform a manned docking maneuver.
    genericDescription = Perform a manned docking maneuver and return home.
	
	title = Perform a manned docking maneuver in orbit of @targetBody.
	description = Well done on the successful launch of the Kemini ATV. Now it's time for the real deal. We want you to launch a capsule manned by at least 2 Kerbals and achieve several objectives:&br;&br;1. Dock the new, manned capsule with the ATV.&br;2. Perform several experiments.&br;3. Collect the experiments from the ATV by EVA.&br;4.Return the manned capsule back home, including the collected science.&br;&br;If you fail, we will ofcourse deny any involvement, Jeb has a reputation for doing rogue launches with spare rockets anyway. Oh and please get rid of the ATV afterwards, the targeting systems of any future Kemini systems might get confused otherwise. Good luck!
	
    synopsis = <color=yellow>Launch the Kemini orbiter, dock with the ATV, do science and return home safely.</color>
	notes = In assembly, use the tags 'Gemini' to find components fitting for this mission.
    completedMessage = Well done! If this doesn't impress the brass, we'll have to set up shop selling donuts found in dumpsters.

    // 1 at a time
    maxSimultaneous = 1

    // Always offered by Bluedog Design Bureau
    agent = Bluedog Design Bureau

    targetBody = @targetBody1

    // Contract rewards
	advanceFunds = Random(@BluedogDB:Kerbucks1,@BluedogDB:Kerbucks105)
    rewardFunds = Random(@BluedogDB:Kerbucks2,@BluedogDB:Kerbucks3)
    rewardReputation = Random(8.0, 10.0)

	// Randomly select a possible target body.
    DATA
    {
        type = CelestialBody
		hidden = true
		
        targetBody1 = @/targetVessel1.CelestialBody()
    }
	
	//Find a target ATV.
	DATA
    {
        type = Vessel
		uniquenessCheck = CONTRACT_ACTIVE
		requiredValue = true
        targetVessel1 = AllVessels().Where(v => v.Parts().Contains(bluedog_GATV_MaterialsBay) == true && v.FreeDockingPorts() == 1).Random()
		title = Target the Kemini ATV
    }
	
    // Hardcoded list of specific experiments
    DATA
    {
        type = List<ScienceExperiment>
        hidden = true

        experiments = [logmmImpacts , bd_GeigerCounter ]
    }
	
	// Science recovery: transmit, recover, or ideal.
    DATA
    {
        type = ScienceRecoveryMethod

        hidden = true

        recoveryMethod = Recover
    }

	PARAMETER
    {
        name = Kemini manned orbiter
        type = VesselParameterGroup
        title = Launch a new Kemini manned orbiter spacecraft
		define = Kemini-manned-orbiter
		
		PARAMETER
		{
			name = NewVessel
			type = NewVessel
			title = The Kemini spacecraft must be a new vessel
		}
		
		PARAMETER
		{
			name = HasCrew
			type = HasCrew
			title = At least 2 crew on board
			
			minCrew = 2
		}
		
		PARAMETER
		{
			name = PartValidation
			type = PartValidation
			title = Must have a docking port
			
			partModule = ModuleDockingNode
		}
		
		//Dock to the existing Kemini ATV.
		PARAMETER
		{    
          name = Docking   
          type = Docking    
          vessel = @/targetVessel1
          defineDockedVessel = Kemini-manned-orbiter   
          disableOnStateChange = true
          title = Dock with the Kemini ATV
		}   
    }

	PARAMETER
	{
		name = CollectScience
		type = CollectScience
		title = Perform basic experiments

		situation = InSpaceLow
		experiment = @/experiments.Random(2)
		recoveryMethod = @/recoveryMethod

		rewardFunds = Random(3000.0, 4000.0)
		disableOnStateChange = true
	}
	
	PARAMETER
	{
		name = CollectScience
		type = CollectScience
		title = Analyze the materials bay and recover the data by EVA

		situation = InSpaceLow
		experiment = mobileMaterialsLab
		experiment = evaReport
		recoveryMethod = @/recoveryMethod

		rewardFunds = Random(5000.0, 6000.0)
		disableOnStateChange = true
	}
	
	PARAMETER
	{
        name = ReturnHome
        type = ReturnHome
		title = Recover the Kemini capsule and its occupants intact
	}
	
	// Contract only becomes available after Kemini ATV has been launched.
    REQUIREMENT
	{
		name = CompleteContract
		type = CompleteContract
		contractType = BDB_Gemini_ATV
	}
}